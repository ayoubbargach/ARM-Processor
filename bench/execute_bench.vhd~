library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

library modelsim_lib;
use modelsim_lib.util.all;

library lib_VHDL;

use work.instruction_field.all;

entity bench_execute is
  
end bench_execute;

architecture bench_arch of bench_execute is 

  component execute
    port (
      clk      : in  std_logic;
      enable   : in  std_logic;
      reset    : in  std_logic;
      op_code  : in  std_logic_vector(3 downto 0);
      cond     : in  std_logic_vector(3 downto 0);
      operand2 : in  std_logic_vector(11 downto 0);
      rA_data  : in  std_logic_vector(31 downto 0);
      op2_data : in  std_logic_vector(31 downto 0);
      imm_data : in  std_logic_vector(31 downto 0);
      s_alu    : out std_logic_vector(31 downto 0));
  end component;

  signal clk      : std_logic;
  signal enable   : std_logic;
  signal reset    : std_logic;
  signal op_code  : std_logic_vector(3 downto 0);
  signal cond     : std_logic_vector(3 downto 0);
  signal operand2 : std_logic_vector(11 downto 0);
  signal rA_data  : std_logic_vector(31 downto 0);
  signal op2_data : std_logic_vector(31 downto 0);
  signal imm_data : std_logic_vector(31 downto 0);
  signal s_alu    : std_logic_vector(31 downto 0);


begin  -- bench_arch

  execute_1: execute
    port map (
      clk      => clk,
      enable   => enable,
      reset    => reset,
      op_code  => op_code,
      cond     => cond,
      operand2 => operand2,
      rA_data  => rA_data,
      op2_data => op2_data,
      imm_data => imm_data,
      s_alu    => s_alu);

  reset <= '1', '0' after 10 ns;

  clock : process
    begin
      clk <= '0';
      wait for 5 ns;
      clk <= '1';
      wait for 5 ns;
    end process;
  
    process
      constant delay : time := 10 ns;
    begin  -- process
      op_code <= op_ADD;
      rA_data <= X"00000001";
      op2_data <= X"00000010";
      assert unsigned(s_alu) = 17 report "mauvais resultat de l'addition" severity note;
      wait for delay;
      op_code <= op_AND;
      rA_data <= X"10101001";
      op2_data <= X"01001011";
      assert unsigned(s_alu) = 16#00001001# report "mauvais resultat du AND" severity note;
      wait for delay;
    end process;
  
end bench_arch;
